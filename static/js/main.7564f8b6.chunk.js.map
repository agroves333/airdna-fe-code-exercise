{"version":3,"sources":["hooks/useWeather.tsx","components/Toast.tsx","hooks/useErrors.tsx","utils/conversions.ts","components/ForecastCard.tsx","components/Forecast.tsx","components/Header.tsx","components/Search.tsx","components/CurrentWeather.tsx","components/NoResults.tsx","components/Loader.tsx","pages/Weather.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TempUnit","Toast","useErrors","errors","setErrors","gap","sx","position","bottom","right","gridAutoRows","map","error","i","bg","onClick","filter","j","handleCloseClick","ml","mr","ErrorContext","React","createContext","ErrorProvider","children","useState","Provider","value","context","useContext","undefined","Error","WeatherContext","WeatherProvider","searchTerm","setSearchTerm","weather","setWeather","F","tempUnit","setTempUnit","loading","setLoading","searchForecast","useCallback","a","fetch","locationResponse","json","locations","woeid","forecastResponse","forecast","latt_long","split","lat","lng","consolidated_weather","item","id","date","applicable_date","icon","weather_state_abbr","high","max_temp","low","min_temp","temp","the_temp","windDirection","wind_direction","windSpeed","wind_speed","weatherState","weather_state_name","pressure","air_pressure","humidity","visibility","cityState","title","parent","timezone","message","convert","celsius","Math","round","Number","useWeather","ForecastCard","flexDirection","flexWrap","alignItems","justifyContent","borderRadius","width","p","mb","fontSize","textAlign","moment","format","maxWidth","src","alt","color","mt","height","transform","fontWeight","display","Forecast","props","gridAutoFlow","Header","Search","handleKeydown","handleChange","m","onChange","onKeyDown","placeholder","top","CurrentWeather","current","handleTempUnitClick","lineHeight","cursor","alignSelf","C","Date","tz","NoResults","Loader","left","Weather","hasSearched","setHasSearched","e","code","target","my","theme","baseTheme","breakpoints","colors","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7564f8b6.chunk.js","sourcesContent":["import React, {\n  ReactNode,\n  useState,\n  useContext,\n  useCallback,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport { toFahrenheit } from '@utils/conversions'\nimport { useErrors } from '@hooks/useErrors'\n\nexport type WeatherType = {\n  forecast: ForecastItem[]\n  lat: number\n  lng: number\n  cityState: string\n  timezone: string\n} | null\n\nexport type ForecastItem = {\n  id: number\n  date: string\n  icon: string\n  high: number\n  low: number\n  temp: number\n  windDirection: number\n  windSpeed: number\n  weatherState: string\n  pressure: number\n  humidity: number\n  visibility: number\n} | null\n\ninterface ForecastResponseItem {\n  id: number\n  applicable_date: string\n  weather_state_abbr: string\n  weather_state_name: string\n  min_temp: number\n  max_temp: number\n  the_temp: number\n  wind_direction: number\n  wind_speed: number\n  air_pressure: number\n  humidity: number\n  visibility: number\n}\n\ninterface WeatherContextInterface {\n  weather: WeatherType\n  setWeather: Dispatch<SetStateAction<WeatherType>>\n  setSearchTerm: Dispatch<SetStateAction<string>>\n  searchForecast: () => void\n  searchTerm: string\n  tempUnit: TempUnit\n  setTempUnit: Dispatch<SetStateAction<TempUnit>>\n  convert: (temp: number | undefined) => number\n  loading: boolean\n}\n\nexport enum TempUnit {\n  F,\n  C,\n}\n\nconst WeatherContext = React.createContext<WeatherContextInterface | null>(null)\n\nconst WeatherProvider = ({ children }: { children: ReactNode }) => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [weather, setWeather] = useState<WeatherType>(null)\n  const [tempUnit, setTempUnit] = useState<TempUnit>(TempUnit.F)\n  const [loading, setLoading] = useState(false)\n  const { setErrors } = useErrors()\n\n  const searchForecast = useCallback(async () => {\n    setLoading(true)\n\n    try {\n      const locationResponse = await fetch(\n        `/api/location/search/?query=${searchTerm}`\n      )\n      const locations = await locationResponse?.json()\n\n      const forecastResponse = await fetch(\n        `/api/location/${locations[0]?.woeid}/`\n      )\n\n      const forecast = await forecastResponse?.json()\n\n      const [lat, lng] = forecast?.latt_long?.split(',')\n\n      setWeather({\n        forecast: forecast?.consolidated_weather?.map(\n          (item: ForecastResponseItem) => ({\n            id: item?.id,\n            date: item?.applicable_date,\n            icon: item?.weather_state_abbr,\n            high: item?.max_temp,\n            low: item?.min_temp,\n            temp: item?.the_temp,\n            windDirection: item?.wind_direction,\n            windSpeed: item?.wind_speed,\n            weatherState: item?.weather_state_name,\n            pressure: item?.air_pressure,\n            humidity: item?.humidity,\n            visibility: item?.visibility,\n          })\n        ),\n        cityState: `${forecast?.title}, ${forecast?.parent?.title}`,\n        timezone: forecast?.timezone,\n        lat,\n        lng,\n      })\n      setLoading(false)\n    } catch (err: any) {\n      setWeather(null)\n      setLoading(false)\n      setErrors((errors) => [err?.message, ...errors])\n    }\n  }, [setWeather, searchTerm])\n\n  const convert = (temp: number | undefined): number =>\n    temp && tempUnit === TempUnit.F\n      ? toFahrenheit(temp)\n      : Math.round(Number(temp))\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        weather,\n        setWeather,\n        searchTerm,\n        setSearchTerm,\n        searchForecast,\n        tempUnit,\n        setTempUnit,\n        convert,\n        loading,\n      }}\n    >\n      {children}\n    </WeatherContext.Provider>\n  )\n}\n\nconst useWeather = () => {\n  const context = useContext(WeatherContext) as WeatherContextInterface\n  if (context === undefined) {\n    throw new Error('useWeather can only be used inside WeatherProvider')\n  }\n  return context\n}\n\nexport { WeatherProvider, useWeather }\n","import { FC } from 'react'\nimport { Grid, Alert, Close, Text } from 'theme-ui'\nimport { useErrors } from '@hooks/useErrors'\n\nconst Toast: FC = () => {\n  const { errors, setErrors } = useErrors()\n\n  const handleCloseClick = (i: number) => {\n    setErrors((errors) => errors.filter((error, j) => i !== j))\n  }\n\n  return (\n    <Grid\n      gap={1}\n      sx={{\n        position: 'fixed',\n        bottom: '0.5rem',\n        right: '0.5rem',\n        gridAutoRows: 'auto',\n      }}\n    >\n      {errors.map((error, i) => (\n        <Alert key={`error-${i}`} bg=\"error\">\n          <Text>{error}</Text>\n          <Close onClick={() => handleCloseClick(i)} ml=\"auto\" mr={-2} />\n        </Alert>\n      ))}\n    </Grid>\n  )\n}\n\nexport default Toast\n","import React, {\n  ReactNode,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from 'react'\nimport Toast from '@components/Toast'\n\ninterface ErrorContextInterface {\n  errors: string[]\n  setErrors: Dispatch<SetStateAction<string[]>>\n}\n\nconst ErrorContext = React.createContext<ErrorContextInterface | null>(null)\n\nconst ErrorProvider = ({ children }: { children: ReactNode }) => {\n  const [errors, setErrors] = useState<string[]>([])\n\n  return (\n    <ErrorContext.Provider\n      value={{\n        errors,\n        setErrors,\n      }}\n    >\n      {children}\n      <Toast />\n    </ErrorContext.Provider>\n  )\n}\n\nconst useErrors = () => {\n  const context = useContext(ErrorContext) as ErrorContextInterface\n  if (context === undefined) {\n    throw new Error('useError can only be used inside ErrorProvider')\n  }\n  return context\n}\n\nexport { ErrorProvider, useErrors }\n","export const toFahrenheit = (celsius: number) =>\n  celsius && Math.round((celsius * 9) / 5 + 32)\n","import React, { FC } from 'react'\nimport moment from 'moment'\nimport { Box, Flex, Image, Text } from 'theme-ui'\nimport { FaArrowUp, FaWind } from 'react-icons/fa'\nimport { ForecastItem, useWeather } from '@hooks/useWeather'\n\nconst ForecastCard: FC<ForecastItem> = ({\n  id,\n  date,\n  icon,\n  high,\n  low,\n  windDirection,\n  windSpeed,\n  humidity,\n  visibility,\n  pressure,\n}) => {\n  const { convert } = useWeather()\n\n  return (\n    <Flex\n      key={id}\n      sx={{\n        flexDirection: ['row', 'column'],\n        flexWrap: ['wrap', null],\n        alignItems: ['center', null],\n        justifyContent: ['space-between', 'center'],\n        bg: 'muted',\n        borderRadius: '0.25rem',\n        width: '100%',\n      }}\n      p={3}\n    >\n      <Flex\n        sx={{\n          flexDirection: ['row', 'column'],\n          flexWrap: 'wrap',\n          justifyContent: ['space-between', null],\n          alignItems: 'center',\n        }}\n      >\n        <Text\n          mr={[4, 0]}\n          mb={[0, 2]}\n          sx={{ fontSize: [2, 3], textAlign: 'center' }}\n        >\n          {moment(date).format('ddd')}\n        </Text>\n        <Image\n          mb={[0, 2]}\n          sx={{\n            maxWidth: '3em',\n          }}\n          src={`https://www.metaweather.com/static/img/weather/${icon}.svg`}\n          alt=\"\"\n        />\n        <Flex mb={[0, 2]}>\n          <Text\n            mr={1}\n            sx={{\n              fontSize: 3,\n            }}\n          >\n            {convert(high)}°\n          </Text>\n          /\n          <Text\n            ml={1}\n            color=\"gray\"\n            sx={{\n              fontSize: 3,\n            }}\n          >\n            {convert(low)}°\n          </Text>\n        </Flex>\n\n        <Flex mt={[2, null]} sx={{ alignItems: 'center' }}>\n          <Box\n            mr={2}\n            sx={{\n              width: '1rem',\n              height: '1rem',\n            }}\n          >\n            <FaWind />\n          </Box>\n          <Box\n            mr={2}\n            sx={{\n              transform: `rotate(${windDirection}deg)`,\n              width: '1rem',\n              height: '1rem',\n            }}\n          >\n            <FaArrowUp />\n          </Box>\n          <Text sx={{ fontSize: 1 }}>{Math.round(windSpeed || 0)}mph</Text>\n        </Flex>\n      </Flex>\n\n      <Flex\n        mt={[3, null]}\n        sx={{\n          width: '100%',\n          flexDirection: ['row', 'column'],\n          justifyContent: ['space-between', null],\n          textAlign: 'center',\n        }}\n      >\n        <Box sx={{ fontSize: 1 }}>\n          <Text sx={{ fontWeight: 'bold', display: 'block' }}>Humidity</Text>\n          <Text>{humidity}%</Text>\n        </Box>\n\n        <Box sx={{ fontSize: 1 }}>\n          <Text sx={{ fontWeight: 'bold', display: 'block' }}>Visibility</Text>\n          <Text>{Math.round(Number(visibility) * 10) / 10} mi.</Text>\n        </Box>\n\n        <Box sx={{ fontSize: 1 }}>\n          <Text sx={{ fontWeight: 'bold', display: 'block' }}>Pressure</Text>\n          <Text>{pressure} mb</Text>\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default ForecastCard\n","import React, { FC } from 'react'\nimport { Grid, Box, BoxProps } from 'theme-ui'\nimport { ForecastItem, useWeather } from '@hooks/useWeather'\nimport ForecastCard from '@components/ForecastCard'\n\nconst Forecast: FC<BoxProps> = ({ ...props }) => {\n  const { weather } = useWeather()\n\n  return (\n    <Box sx={{ position: 'relative', width: '100%' }}>\n      <Grid\n        gap={2}\n        sx={{\n          gridAutoFlow: ['row', 'column'],\n        }}\n        {...props}\n      >\n        {weather?.forecast?.map(\n          (item: ForecastItem) =>\n            item && <ForecastCard key={item?.id} {...item} />\n        )}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Forecast\n","import React, { FC } from 'react'\nimport { Flex, Text } from 'theme-ui'\n\nconst Header: FC = () => {\n  return (\n    <Flex\n      p={3}\n      sx={{\n        height: '5rem',\n        alignItems: 'center',\n        bg: 'primary',\n      }}\n    >\n      <Text color=\"white\" sx={{ fontSize: 3 }}>\n        Weather\n      </Text>\n    </Flex>\n  )\n}\n\nexport default Header\n","import React, { ChangeEventHandler, FC, KeyboardEventHandler } from 'react'\nimport { Box, BoxProps, Input } from 'theme-ui'\nimport { FaSearch } from 'react-icons/fa'\nimport { ThemeUIStyleObject } from '@theme-ui/css'\n\ninterface Props extends BoxProps {\n  handleKeydown: KeyboardEventHandler<HTMLInputElement>\n  handleChange: ChangeEventHandler<HTMLInputElement>\n  searchTerm: string\n  sx?: ThemeUIStyleObject\n}\n\nconst Search: FC<Props> = ({\n  handleKeydown,\n  handleChange,\n  searchTerm,\n  sx,\n  ...props\n}: Props) => {\n  return (\n    <Box\n      m=\"auto\"\n      sx={{\n        position: 'relative',\n        ...sx,\n      }}\n      {...props}\n    >\n      <Input\n        value={searchTerm}\n        onChange={handleChange}\n        onKeyDown={handleKeydown}\n        placeholder=\"Enter city\"\n      />\n      <Box\n        sx={{\n          position: 'absolute',\n          right: '1rem',\n          top: '0.625rem',\n        }}\n        color=\"primary\"\n      >\n        <FaSearch />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Search\n","import React, { FC } from 'react'\nimport { Box, BoxProps, Flex, Image, Text } from 'theme-ui'\nimport moment from 'moment-timezone'\nimport { useWeather, ForecastItem, TempUnit } from '@hooks/useWeather'\n\nconst CurrentWeather: FC<BoxProps> = ({ ...props }) => {\n  const { weather, tempUnit, setTempUnit, convert } = useWeather()\n  const current: ForecastItem = weather?.forecast?.[0] || null\n\n  const handleTempUnitClick = (tempUnit: TempUnit) => {\n    setTempUnit(tempUnit)\n  }\n\n  return (\n    weather && (\n      <Flex\n        sx={{\n          flexDirection: ['column', 'row'],\n          justifyContent: 'space-between',\n        }}\n        {...props}\n      >\n        <Flex\n          mb={[3, null]}\n          sx={{\n            alignItems: 'center',\n          }}\n        >\n          <Image\n            mb={[0, 2]}\n            mr={2}\n            sx={{\n              height: '4rem',\n            }}\n            src={`https://www.metaweather.com/static/img/weather/${current?.icon}.svg`}\n            alt=\"\"\n          />\n          <Flex sx={{ alignItems: 'flex-start' }}>\n            <Text sx={{ fontSize: 7, lineHeight: 1 }}>\n              {convert(current?.temp)}\n            </Text>\n            <Box\n              sx={{ fontSize: 3, cursor: 'pointer', alignSelf: 'flex-start' }}\n            >\n              <Text\n                sx={{ fontWeight: tempUnit === TempUnit.F ? 'bold' : 'body' }}\n                onClick={() => handleTempUnitClick(TempUnit.F)}\n              >\n                °F\n              </Text>{' '}\n              |{' '}\n              <Text\n                sx={{ fontWeight: tempUnit === TempUnit.C ? 'bold' : 'body' }}\n                onClick={() => handleTempUnitClick(TempUnit.C)}\n              >\n                °C\n              </Text>\n            </Box>\n          </Flex>\n        </Flex>\n        <Flex\n          sx={{\n            flexDirection: 'column',\n            justifyContent: 'center',\n            textAlign: ['left', 'right'],\n          }}\n        >\n          <Text sx={{ fontSize: 4 }}>{weather?.cityState}</Text>\n          <Text sx={{ fontSize: 2 }} color=\"gray\">\n            {weather?.timezone &&\n              moment(Date()).tz(weather.timezone).format('dddd LT')}\n          </Text>\n          <Text sx={{ fontSize: 2 }} color=\"gray\">\n            {current?.weatherState}\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  )\n}\n\nexport default CurrentWeather\n","import { FC } from 'react'\nimport { Flex, Text } from 'theme-ui'\n\nconst NoResults: FC = () => {\n  return (\n    <Flex\n      sx={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      <Text sx={{ fontSize: 4 }}>\n        No Results Found. Please try a different location\n      </Text>\n    </Flex>\n  )\n}\n\nexport default NoResults\n","import { FC } from 'react'\nimport { Flex, Spinner } from 'theme-ui'\n\nconst Loader: FC = () => {\n  return (\n    <Flex\n      sx={{\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        bg: 'rgba(255,255,255,0.7)',\n      }}\n    >\n      <Spinner />\n    </Flex>\n  )\n}\n\nexport default Loader\n","import React, { FC, useCallback, useState } from 'react'\nimport { Container, Box } from 'theme-ui'\nimport { useWeather } from '@hooks/useWeather'\nimport Forecast from '@components/Forecast'\nimport Header from '@components/Header'\nimport Search from '@components/Search'\nimport CurrentWeather from '@components/CurrentWeather'\nimport NoResults from '@components/NoResults'\nimport Loader from '@components/Loader'\n\nconst Weather: FC = () => {\n  const [hasSearched, setHasSearched] = useState<boolean>(false)\n\n  const { searchTerm, setSearchTerm, searchForecast, weather, loading } =\n    useWeather()\n\n  const handleKeydown = useCallback(\n    async (e) => {\n      if (e.code === 'Enter') {\n        await searchForecast()\n        setHasSearched(true)\n      }\n    },\n    [searchForecast]\n  )\n\n  const handleChange = useCallback(\n    (e) => {\n      setSearchTerm(e.target.value)\n    },\n    [setSearchTerm]\n  )\n\n  return (\n    <Container>\n      <Header />\n      <Box m={4}>\n        <Search\n          mt={4}\n          handleChange={handleChange}\n          handleKeydown={handleKeydown}\n          searchTerm={searchTerm}\n        />\n\n        {weather && (\n          <>\n            <CurrentWeather mt={4} />\n            <Forecast my={4} />\n          </>\n        )}\n        {hasSearched && !weather && <NoResults />}\n      </Box>\n      {loading && <Loader />}\n    </Container>\n  )\n}\n\nexport default Weather\n","/** @jsxImportSource theme-ui */\nimport { FC } from 'react'\nimport { Theme, ThemeProvider } from 'theme-ui'\nimport baseTheme from '@theme-ui/preset-base'\nimport Weather from '@pages/Weather'\nimport { WeatherProvider } from '@hooks/useWeather'\nimport { ErrorProvider } from '@hooks/useErrors'\n\nconst theme: Theme = {\n  ...baseTheme,\n  breakpoints: ['50rem', '60rem'],\n  colors: {\n    ...baseTheme?.colors,\n    error: '#b80000',\n  },\n}\n\nconst App: FC = () => (\n  <ThemeProvider theme={theme}>\n    <ErrorProvider>\n      <WeatherProvider>\n        <Weather />\n      </WeatherProvider>\n    </ErrorProvider>\n  </ThemeProvider>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}